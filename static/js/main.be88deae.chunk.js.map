{"version":3,"sources":["reportWebVitals.js","utils/config.js","utils/near.js","utils/helper.js","image/sandwich.jpg","component/Wallet.js","utils/Cover.js","utils/Notification.js","component/marketplace/AddProduct.js","component/marketplace/Product.js","utils/marketplace.js","utils/loader.js","component/marketplace/Products.js","App.js","component/marketplace/InventoryList.js","component/marketplace/NewProduct.js","route.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","name","coverImg","style","background","minHeight","maxWidth","src","alt","Button","defaultProps","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","AddProduct","save","navigate","useNavigate","useState","setName","image","setImage","description","setDescription","setLocation","price","setPrice","show","setShow","handleClose","width","class","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","value","placeholder","height","Footer","disabled","Product","product","buy","sold","owner","Col","Card","Badge","bg","objectFit","Text","utils","format","getDrugs","getDrugList","updateDrugPrice","drug_code","new_price","setDrug","drug","receive_date","moment","uuid4","balance","parseInt","unit_of_issue","insert_time","Loader","role","Props","PropTypes","string","prototype","Products","drugs","setDrugs","loading","setLoading","getProducts","useCallback","console","log","error","addProduct","data","parseNearAmount","setProduct","resp","toast","useEffect","Row","xs","sm","lg","map","_product","App","setBalance","getBalance","Container","fluid","Nav","InventoryList","updateLoading","setUpdateLoading","getDrugsList","arr","item","push","enable","updateSellingPrice","item_code","enableEdit","index","forEach","ite","ind","md","Table","striped","bordered","selling_price","outline","supplier_name","drug_name","generic_name","ChangeSellingPrice","length","Alert","NewProduct","expiry_date","form","setForm","handleChange","p","RouteApp","path","element","replace","to","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.be88deae.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const CONTRACT_NAME = process.env.CONTRACT_NAME || \"pharmacy.blocvote.testnet\"; // line 1\n\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\": // line 5\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\": // line 14\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;","import { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport environment from \"./config\";\nconst nearEnv = environment(\"testnet\");\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      viewMethods: [\"getDrugList\", \"getDrug\",\"viewDrugHistory\"],\n      changeMethods: [\"setDrug\", \"updateDrugPrice\",\"buyDrug\"],\n    }\n  );\n}\n","import { formatNearAmount } from \"near-api-js/lib/utils/format\";\nimport environment from \"./config\";\nconst nearEnv = environment(\"testnet\");\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n","export default __webpack_public_path__ + \"static/media/sandwich.2d312449.jpg\";","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\n\nconst Wallet = ({ address, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {amount} <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">{address}</span>\n              </Stack>\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ name, login, coverImg }) => {\n  if ((name, login, coverImg)) {\n    return (\n      <div\n        className=\"d-flex justify-content-center flex-column text-center \"\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\n      >\n        <div className=\"mt-auto text-light mb-5\">\n          <div\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\n            style={{ maxWidth: \"320px\" }}\n          >\n            <img src={coverImg} alt=\"\" />\n          </div>\n          <h1>{name}</h1>\n          <p>Please connect your wallet to continue.</p>\n          <Button\n            onClick={login}\n            variant=\"outline-light\"\n            className=\"rounded-pill px-3 mt-3\"\n          >\n            Connect Wallet\n          </Button>\n        </div>\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nCover.propTypes = {\n  name: PropTypes.string,\n};\n\nCover.defaultProps = {\n  name: \"\",\n};\n\nexport default Cover;","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"bottom-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n    <div>\n      <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n      <span className=\"text-secondary mx-1\">{text}</span>\n    </div>\n  );\n  \n  const NotificationError = ({ text }) => (\n    <div>\n      <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n      <span className=\"text-secondary mx-1\">{text}</span>\n    </div>\n  );\n  \n  const Props = {\n    text: PropTypes.string,\n  };\n  \n  const DefaultProps = {\n    text: \"\",\n  };\n  \n  NotificationSuccess.propTypes = Props;\n  NotificationSuccess.defaultProps = DefaultProps;\n  \n  NotificationError.propTypes = Props;\n  NotificationError.defaultProps = DefaultProps;\n  \n  export { Notification, NotificationSuccess, NotificationError };","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddProduct = ({ save }) => {\n  const navigate =useNavigate()\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const isFormFilled = () => name && image && description && location && price;\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const navToInventory=()=>{\n    navigate(\"/inventory\")\n  }\n  return (\n    <>\n      <Button\n        onClick={navToInventory}\n        variant=\"dark\"\n        className=\"rounded-pill px-0\"\n        style={{ width: \"38px\" }}\n      >\n        <i class=\"bi bi-plus\"></i>\n      </Button>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>New Product</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <FloatingLabel\n              controlId=\"inputName\"\n              label=\"Product name\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder=\"Enter name of product\"\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputUrl\"\n              label=\"Image URL\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Image URL\"\n                onChange={(e) => {\n                  setImage(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputDescription\"\n              label=\"Description\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"description\"\n                style={{ height: \"80px\" }}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputLocation\"\n              label=\"Location\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Location\"\n                onChange={(e) => {\n                  setLocation(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n            <FloatingLabel\n              controlId=\"inputPrice\"\n              label=\"Price\"\n              className=\"mb-3\"\n            >\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Price\"\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </FloatingLabel>\n          </Modal.Body>\n        </Form>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"dark\"\n            disabled={!isFormFilled()}\n            onClick={() => {\n              save({\n                name,\n                image,\n                description,\n                location,\n                price,\n              });\n              handleClose();\n            }}\n          >\n            Save product\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nAddProduct.propTypes = {\n  save: PropTypes.func.isRequired,\n};\n\nexport default AddProduct;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { utils } from \"near-api-js\";\nimport { Card, Button, Col, Badge, Stack } from \"react-bootstrap\";\n\nconst Product = ({ product, buy }) => {\n  const { id, price, name, description, sold, location, image, owner } =\n    product;\n\n  const triggerBuy = () => {\n    buy(id, price);\n  };\n\n  return (\n    <Col >\n      <Card className=\" h-100\">\n        <Card.Header>\n          <Stack direction=\"horizontal\" gap={2}>\n            <span className=\"font-monospace text-secondary\">{owner}</span>\n            <Badge bg=\"secondary\" className=\"ms-auto\">\n              {sold} Sold\n            </Badge>\n          </Stack>\n        </Card.Header>\n        <div className=\" ratio ratio-4x3\">\n          <img src={image} alt={name} style={{ objectFit: \"cover\" }} />\n        </div>\n        <Card.Body className=\"d-flex  flex-column text-center\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Text className=\"flex-grow-1 \">{description}</Card.Text>\n          <Card.Text className=\"text-secondary\">\n            <span>{location}</span>\n          </Card.Text>\n          <Button\n            variant=\"outline-dark\"\n            onClick={triggerBuy}\n            className=\"w-100 py-3\"\n          >\n            Buy for {utils.format.formatNearAmount(price)} NEAR\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.instanceOf(Object).isRequired,\n  buy: PropTypes.func.isRequired,\n};\n\nexport default Product;","import { v4 as uuid4 } from \"uuid\";\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\nimport moment from \"moment\";\nconst GAS = 100000000000000;\n\nexport function createProduct(product) {\n  product.id = uuid4();\n  product.price = parseNearAmount(product.price + \"\");\n  return window.contract.setProduct({ product });\n}\n\nexport function getDrugs() {\n  return window.contract.getDrugList();\n}\n\nexport function updateDrugPrice(drug_code, new_price) {\n  return window.contract.updateDrugPrice({ drug_code, new_price });\n}\n\nexport function setDrug(drug) {\n  const receive_date = moment().format(\"YYYY-MM-DD\");\n  drug.drug_code = uuid4();\n  drug.balance = parseInt(drug.balance);\n  drug.unit_of_issue = parseInt(drug.unit_of_issue);\n  drug.insert_time = moment().format(\"YYYY-MM-DD hh:mm:ss\");\n  return window.contract.setDrug({ drug: drug, receive_date: receive_date });\n}\n\nexport async function buyProduct({ id, price }) {\n  await window.contract.buyProduct({ productId: id }, GAS, price);\n}\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nconst Loader = ({ size }) => (\n  <div className=\"d-flex justify-content-center\">\n    <Spinner\n      size={size}\n      animation=\"border\"\n      role=\"status\"\n      className=\"opacity-25\"\n    >\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n);\nexport default Loader;\nconst Props = {\n  size: PropTypes.string,\n};\nconst DefaultProps = {\n  size: \"sm\",\n};\nLoader.prototype = Props;\nLoader.defaultProps = DefaultProps;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AddProduct from \"./AddProduct\";\nimport Product from \"./Product\";\nimport { Row } from \"react-bootstrap\";\nimport {\n  getProducts as getProductList,\n  buyProduct,\n  createProduct,\n  getDrugs,\n} from \"../../utils/marketplace\";\nimport Loader from \"../../utils/loader\";\nimport {\n  NotificationError,\n  NotificationSuccess,\n} from \"../../utils/Notification\";\n\nconst Products = () => {\n  const [drugs, setDrugs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getProducts = useCallback(async () => {\n    try {\n      setLoading(true);\n      const drugs=await getDrugs();\n      setDrugs(drugs)\n    } catch (error) {\n      console.log({ error });\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const addProduct = async (data) => {\n    try {\n      setLoading(true);\n      createProduct(data).then((resp) => {\n        getProducts();\n      });\n      toast(<NotificationSuccess text=\"Product added successfully.\" />);\n    } catch (error) {\n      console.log({ error });\n      toast(<NotificationError text=\"Failed to create a product.\" />);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const buy = async (id, price) => {\n    // try {\n    //   // await buyProduct({\n    //   //   id,\n    //   //   price,\n    //   // }).then((resp) => getProducts());\n    //   toast(<NotificationSuccess text=\"Product bought successfully\" />);\n    // } catch (error) {\n    //   toast(<NotificationError text=\"Failed to purchase product.\" />);\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\n            <h1 className=\"fs-4 fw-bold mb-0\">Buy Drug</h1>\n            <AddProduct save={addProduct} />\n          </div>\n          <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\n            {drugs.map((_product) => (\n              <Product\n                product={{\n                  ..._product,\n                }}\n                buy={buy}\n              />\n            ))}\n          </Row>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default Products;\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport { Container, Nav } from \"react-bootstrap\";\nimport { login, logout as destroy, accountBalance } from \"./utils/helper\";\nimport coverImg from \"./image/sandwich.jpg\";\nimport \"./App.css\";\nimport Wallet from \"./component/Wallet\";\nimport Cover from \"./utils/Cover\";\nimport { Notification } from \"./utils/Notification\";\nimport Products from \"./component/marketplace/Products\";\n\nconst App = function AppWrapper() {\n  const account = window.walletConnection.account();\n  const [balance, setBalance] = useState(\"0\");\n  const getBalance = useCallback(async () => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  }, [account.accountId]);\n\n  useEffect(() => {\n    getBalance();\n  }, [getBalance]);\n  //..\n  return (\n    <>\n      <Notification />\n      {account.accountId ? (\n        <Container fluid=\"md\">\n          <Nav className=\"justify-content-end pt-3 pb-5\">\n            <Nav.Item>\n              <Wallet\n                address={account.accountId}\n                amount={balance}\n                symbol=\"NEAR\"\n                destroy={destroy}\n              />\n            </Nav.Item>\n          </Nav>\n          <main>\n            <Products />\n          </main>\n        </Container>\n      ) : (\n        <Cover name=\"Drug List\" login={login} coverImg={coverImg} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  Row,\n  Spinner,\n  Table,\n} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getDrugs, updateDrugPrice } from \"../../utils/marketplace\";\nimport Loader from \"../../utils/loader\";\nfunction InventoryList() {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [drugs, setDrugs] = useState([]);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const getDrugsList = useCallback(async () => {\n    try {\n      setLoading(true);\n      let drugs = await getDrugs();\n      const arr = [];\n      drugs && drugs.map((item) => arr.push({ ...item, enable: false }));\n      setDrugs(arr);\n    } catch (error) {\n      console.log({ error });\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const updateSellingPrice = async (item_code, new_price) => {\n    try {\n      setUpdateLoading(true);\n      await updateDrugPrice(item_code, new_price);\n      getDrugsList()\n    } catch {\n      setUpdateLoading(false);\n    } finally {\n      setUpdateLoading(false);\n    }\n  };\n  useEffect(() => {\n    getDrugsList();\n  }, [getDrugsList]);\n  const enableEdit = (item, index) => {\n    const arr = [];\n    drugs.forEach((ite, ind) => {\n      if (index === ind) {\n        arr.push({ ...item, enable: !item.enable });\n      } else {\n        arr.push({ ...ite, enable: false });\n      }\n    });\n    setDrugs(arr);\n  };\n  const ChangeSellingPrice = (item, index, value) => {\n    const arr = [];\n    drugs.forEach((ite, ind) => {\n      if (index === ind) {\n        arr.push({ ...item, selling_price: value });\n      } else {\n        arr.push(ite);\n      }\n    });\n    setDrugs(arr);\n  };\n  return (\n    <Container className=\"mt-3\">\n      <Card centered>\n        <Card.Header>\n          <Card.Title>\n            <Row>\n              <Col md={5}>\n                <Button size=\"sm\" variant=\"dark\" onClick={() => navigate(-1)}>\n                  Back <i className=\"bi arrow-back\" />\n                </Button>\n              </Col>\n              <Col md={2}>\n                <div className=\"text-center\">Drugs Inventory</div>\n              </Col>\n            </Row>\n          </Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Button\n            variant=\"dark\"\n            size=\"sm\"\n            onClick={() => {\n              navigate(\"/add-new-drug\");\n            }}\n          >\n            Add New Drug\n          </Button>\n          {loading ? <Loader /> : \"\"}\n          <Table striped bordered className=\"mt-2\">\n            <thead>\n              <tr>\n                <th className=\"text-center\">Edit</th>\n                <th className=\"text-center\">Supplier Name</th>\n                <th className=\"text-center\">Drug Name</th>\n                <th className=\"text-center\">Quantity</th>\n                <th className=\"text-center\">Selling Price</th>\n                <th className=\"text-center\">Owner</th>\n                <th className=\"text-center\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {drugs &&\n                drugs.map((item, index) => (\n                  <tr key={index}>\n                    <td className=\"text-center\">\n                      {item.enable ? (\n                        <>\n                          <Button\n                            size=\"sm\"\n                            variant=\"dark\"\n                            onClick={() => {\n                              updateSellingPrice(\n                                item.drug_code,\n                                item.selling_price\n                              );\n                            }}\n                          >\n                            {updateLoading ? (\n                              <Spinner\n                                animation=\"border\"\n                                role=\"status\"\n                                size=\"sm\"\n                                className=\"opacity-25\"\n                              ></Spinner>\n                            ) : (\n                              \"Update\"\n                            )}\n                          </Button>\n                          {\"  \"}\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline-dark\"\n                            outline\n                            onClick={() => {\n                              enableEdit(item, index);\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                        </>\n                      ) : (\n                        <Button\n                          size=\"sm\"\n                          variant=\"dark\"\n                          onClick={() => {\n                            enableEdit(item, index);\n                          }}\n                        >\n                          edit\n                        </Button>\n                      )}\n                    </td>\n                    <td>{item.supplier_name}</td>\n                    <td>{`${item.drug_name} (${item.generic_name})`}</td>\n                    <td className=\"text-center\">{item.balance}</td>\n                    <td className=\"text-end\">\n                      {item.enable ? (\n                        <Form.Control\n                          type=\"number\"\n                          placeholder=\"Enter Selling Price\"\n                          size=\"sm\"\n                          value={item.selling_price}\n                          onChange={({ target: { value } }) => {\n                            ChangeSellingPrice(item, index, value);\n                          }}\n                        />\n                      ) : (\n                        item.selling_price\n                      )}\n                    </td>\n                    <td>{item.owner}</td>\n                    <td className=\"text-center\">\n                      <Button size=\"sm\" variant=\"dark\">\n                        view\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n          {!drugs.length ? (\n            <Alert size=\"sm\" className=\"text-center\">\n              {\" \"}\n              No data to display\n            </Alert>\n          ) : (\n            \"\"\n          )}\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n}\n\nexport default InventoryList;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  FloatingLabel,\n  Form,\n  Row,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {  setDrug } from \"../../utils/marketplace\";\nimport { NotificationError, NotificationSuccess } from \"../../utils/Notification\";\n\n\nfunction NewProduct() {\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    drug_name: \"\",\n    price: \"0\",\n    expiry_date: \"\",\n    selling_price: \"\",\n    supplier_name: \"\",\n    generic_name: \"\",\n    unit_of_issue: \"\",\n    balance: 0,\n    image: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const handleChange = ({ target: { name, value } }) => {\n    setForm((p) => ({ ...p, [name]: value }));\n  };\n\n  const isFormFilled = () =>\n    form.drug_name &&\n    form.image &&\n    form.balance &&\n    form.selling_price &&\n    form.price;\n\n  const addProduct = async (data) => {\n    try {\n      setLoading(true);\n      await setDrug(data).then((resp) => {\n        console.log(resp);\n        // navigate(-1);\n      });\n      toast(<NotificationSuccess text=\"Drug added successfully.\" />);\n      navigate(-1);\n    } catch (error) {\n      console.log({ error });\n      toast(<NotificationError text=\"Failed to create a drug.\" />);\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container className=\"mt-2\">\n      <Card centered>\n        <Card.Header>\n          <Card.Title>\n            <Row>\n              <Col md={5}>\n                <Button size=\"sm\" variant=\"dark\" onClick={() => navigate(-1)}>\n                  Back <i className=\"bi arrow-back\" />\n                </Button>\n              </Col>\n              <Col md={2}>\n                <div className=\"text-center\">New Drug</div>\n              </Col>\n            </Row>\n          </Card.Title>\n        </Card.Header>\n        <Form>\n          <Card.Body>\n            <Row>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputSupplierName\"\n                  label=\"Supplier Name\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"text\"\n                    name=\"supplier_name\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.supplier_name}\n                    placeholder=\"Enter  supplier name\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputDrugName\"\n                  label=\"Drug Name\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"text\"\n                    name=\"drug_name\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.drug_name}\n                    placeholder=\"Enter drug name\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={12}>\n                <FloatingLabel\n                  controlId=\"inputGenericName\"\n                  label=\"Generic Name\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"text\"\n                    name=\"generic_name\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.generic_name}\n                    placeholder=\"Enter generic name\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputDrugImage\"\n                  label=\"Image Url\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"text\"\n                    name=\"image\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.image}\n                    placeholder=\"Enter image url\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputDrugQuantity\"\n                  label=\"Quantity\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"number\"\n                    name=\"balance\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.balance}\n                    placeholder=\"Enter Quantity\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputDrugPrice\"\n                  label=\"Price\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.price}\n                    placeholder=\"Enter price\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputDrugSellingPrice\"\n                  label=\"Selling Price\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"text\"\n                    name=\"selling_price\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.selling_price}\n                    placeholder=\"Enter selling price\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputUOI\"\n                  label=\"Unit of issue\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"number\"\n                    name=\"unit_of_issue\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.unit_of_issue}\n                    placeholder=\"Enter unit of issue\"\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col sm={6}>\n                <FloatingLabel\n                  controlId=\"inputExpiryDate\"\n                  label=\"Expiry Date\"\n                  className=\"mb-3\"\n                >\n                  <Form.Control\n                    type=\"date\"\n                    name=\"expiry_date\"\n                    onChange={handleChange}\n                    className=\"size-sm\"\n                    value={form.expiry_date}\n                    placeholder=\"Enter expiry date\"\n                  />\n                </FloatingLabel>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Form>\n        <Card.Footer>\n          <div className=\"text-center\">\n            <Button\n              variant=\"dark\"\n              disabled={!isFormFilled()}\n              onClick={() => {\n                addProduct(form);\n              }}\n            >\n              {loading ? (\n                <Spinner\n                  animation=\"border\"\n                  role=\"status\"\n                  size=\"sm\"\n                  className=\"opacity-25\"\n                />\n              ) : (\n                \"Save product\"\n              )}\n            </Button>\n          </div>\n        </Card.Footer>\n      </Card>\n    </Container>\n  );\n}\n\nexport default NewProduct;\n","import * as React from \"react\";\nimport { Routes, Route ,Navigate} from \"react-router-dom\";\nimport App from \"./App\";\nimport InventoryList from \"./component/marketplace/InventoryList\";\nimport NewProduct from \"./component/marketplace/NewProduct\";\n\nexport const RouteApp = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Navigate replace to=\"/near-maketplace-dapp\" />} />\n      <Route path=\"/near-maketplace-dapp\" element={<App />} />\n      <Route path=\"/inventory\" element={<InventoryList />} />\n      <Route path=\"/add-new-drug\" element={<NewProduct />} />\n    </Routes>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RouteApp } from \"./route\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <BrowserRouter>\n          <RouteApp />\n        </BrowserRouter>\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();\n"],"sourceRoot":""}